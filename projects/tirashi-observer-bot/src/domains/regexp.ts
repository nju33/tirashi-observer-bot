const regexpMaterials = [
    ['あ', 'ア', 'ｱ', 'ぁ', 'ァ', 'ｧ'],
    ['い', 'イ', 'ｲ', 'ぃ', 'ィ', 'ｨ'],
    ['う', 'ウ', 'ｳ', 'ぅ', 'ゥ', 'ｩ'],
    ['え', 'エ', 'ｴ', 'ぇ', 'ェ', 'ｪ'],
    ['お', 'オ', 'ｵ', 'ぉ', 'ォ', 'ｫ'],
    ['か', 'カ', 'ｶ', 'ヵ'],
    ['き', 'キ', 'ｷ'],
    ['く', 'ク', 'ｸ'],
    ['け', 'ケ', 'ｹ', 'ヶ'],
    ['こ', 'コ', 'ｺ'],
    ['さ', 'サ', 'ｻ'],
    ['し', 'シ', 'ｼ'],
    ['す', 'ス', 'ｽ'],
    ['せ', 'セ', 'ｾ'],
    ['そ', 'ソ', 'ｿ'],
    ['た', 'タ', 'ﾀ'],
    ['ち', 'チ', 'ﾁ'],
    ['つ', 'ツ', 'ﾂ', 'っ', 'ッ', 'ｯ'],
    ['て', 'テ', 'ﾃ'],
    ['と', 'ト', 'ﾄ'],
    ['な', 'ナ', 'ﾅ'],
    ['に', 'ニ', 'ﾆ'],
    ['ぬ', 'ヌ', 'ﾇ'],
    ['ね', 'ネ', 'ﾈ'],
    ['の', 'ノ', 'ﾉ'],
    ['は', 'ハ', 'ﾊ'],
    ['ひ', 'ヒ', 'ﾋ'],
    ['ふ', 'フ', 'ﾌ'],
    ['へ', 'ヘ', 'ﾍ'],
    ['ほ', 'ホ', 'ﾎ'],
    ['ま', 'マ', 'ﾏ'],
    ['み', 'ミ', 'ﾐ'],
    ['む', 'ム', 'ﾑ'],
    ['め', 'メ', 'ﾒ'],
    ['も', 'モ', 'ﾓ'],
    ['や', 'ヤ', 'ﾔ', 'ゃ', 'ャ', 'ｬ'],
    ['ゆ', 'ユ', 'ﾕ', 'ゅ', 'ュ', 'ｭ'],
    ['よ', 'ヨ', 'ﾖ', 'ょ', 'ョ', 'ｮ'],
    ['ら', 'ラ', 'ﾗ'],
    ['り', 'リ', 'ﾘ'],
    ['る', 'ル', 'ﾙ'],
    ['れ', 'レ', 'ﾚ'],
    ['ろ', 'ロ', 'ﾛ'],
    ['わ', 'ワ', 'ﾜ'],
    ['を', 'ヲ', 'ｦ'],
    ['ん', 'ン', 'ﾝ'],
    ['が', 'ガ', 'ｶﾞ', 'カﾞ', 'カ゛', 'ｶ゛', 'ヵﾞ', 'ヵ゛'],
    ['ぎ', 'ギ', 'ｷﾞ', 'キﾞ', 'キ゛', 'ｷ゛'],
    ['ぐ', 'グ', 'ｸﾞ', 'クﾞ', 'ク゛', 'ｸ゛'],
    ['げ', 'ゲ', 'ｹﾞ', 'ケﾞ', 'ケ゛', 'ｹ゛', 'ヶﾞ', 'ヶ゛'],
    ['ご', 'ゴ', 'ｺﾞ', 'コﾞ', 'コ゛', 'ｺ゛'],
    ['ざ', 'ザ', 'ｻﾞ', 'サﾞ', 'サ゛', 'ｻ゛'],
    ['じ', 'ジ', 'ｼﾞ', 'シﾞ', 'シ゛', 'ｼ゛'],
    ['ず', 'ズ', 'ｽﾞ', 'スﾞ', 'ス゛', 'ｽ゛'],
    ['ぜ', 'ゼ', 'ｾﾞ', 'セﾞ', 'セ゛', 'ｾ゛'],
    ['ぞ', 'ゾ', 'ｿﾞ', 'ソﾞ', 'ソ゛', 'ｿ゛'],
    ['だ', 'ダ', 'ﾀﾞ', 'タﾞ', 'タ゛', 'ﾀ゛'],
    ['ぢ', 'ヂ', 'ﾁﾞ', 'チﾞ', 'チ゛', 'ﾁ゛'],
    ['づ', 'ヅ', 'ｽﾞ', 'ツﾞ', 'ツ゛', 'ﾂ゛'],
    ['で', 'デ', 'ﾃﾞ', 'テﾞ', 'テ゛', 'ﾃ゛'],
    ['ど', 'ド', 'ﾄﾞ', 'トﾞ', 'ト゛', 'ﾄ゛'],
    ['ば', 'バ', 'ﾊﾞ', 'ハﾞ', 'ハ゛', 'ﾊ゛'],
    ['び', 'ビ', 'ﾋﾞ', 'ヒﾞ', 'ヒ゛', 'ﾋ゛'],
    ['ぶ', 'ブ', 'ﾌﾞ', 'フﾞ', 'フ゛', 'ﾌ゛'],
    ['べ', 'ベ', 'ﾍﾞ', 'ヘﾞ', 'へ゛', 'ﾍ゛'],
    ['ぼ', 'ボ', 'ﾎﾞ', 'ホﾞ', 'ホ゛', 'ﾎ゛'],
    ['ぱ', 'パ', 'ﾊﾟ', 'ハﾟ'],
    ['ぴ', 'ピ', 'ﾋﾟ', 'ヒﾟ'],
    ['ぷ', 'プ', 'ﾌﾟ', 'フﾟ'],
    ['ぺ', 'ペ', 'ﾍﾟ', 'ヘﾟ'],
    ['ぽ', 'ポ', 'ﾎﾟ', 'ホﾟ']
]

export interface WordRegexp {
    test: (text: string) => boolean
}

export class TobWordRegexp implements WordRegexp {
    private readonly values: RegExp[]

    constructor(public readonly registered: string) {
        const chunks = registered.split(/\s?&\s?/)

        this.values = chunks.map((chunk) => {
            const chars = chunk.split('')
            const pattern = chars
                .map((char) => {
                    return regexpMaterials.find((item) => item.includes(char))
                })
                .map((item, i) => {
                    return item == null ? chunk.charAt(i) : item
                })
                .map((item) => {
                    return Array.isArray(item) ? `[${item.join('')}]` : item
                })
                .join('')

            return new RegExp(`(?:${pattern})+`)
        })
    }

    test(
        text: Parameters<WordRegexp['test']>[0]
    ): ReturnType<WordRegexp['test']> {
        return this.values.every((regexp) => regexp.test(text))
    }
}
